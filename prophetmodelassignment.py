# -*- coding: utf-8 -*-
"""prophetmodelassignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oMTzS19ENISJCFrR6bNUZeXYmaZxMh2E
"""

import pandas as pd
from prophet import Prophet
import matplotlib.pyplot as plt

# Load the data
df = pd.read_csv('Sales Data.csv')

df['Sales Date'] = pd.to_datetime(df['Sales Date'], format='%m-%d-%y')

# Aggregate daily sales
daily_sales = df.groupby('Sales Date')['Total Sales'].sum().reset_index()

# Rename columns to match Prophet requirements
daily_sales = daily_sales.rename(columns={'Sales Date': 'ds', 'Total Sales': 'y'})

# Create and fit the model
model = Prophet(yearly_seasonality=True, weekly_seasonality=True, daily_seasonality=False)
model.fit(daily_sales)

# Generate future dates for forecasting (e.g., next 365 days)
future_dates = model.make_future_dataframe(periods=365)

# Make predictions
forecast = model.predict(future_dates)

# Plot the forecast
fig1 = model.plot(forecast)
plt.title('Sales Forecast')
plt.xlabel('Date')
plt.ylabel('Total Sales')
plt.show()

# Plot the components of the forecast
fig2 = model.plot_components(forecast)
plt.show()

# Print the forecast for the next 30 days
print(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail(36))

# Assuming you have already created the forecast
forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].to_csv('sales_forecast.csv', index=False)